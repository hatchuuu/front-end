import Head from "next/head";
import { Container, Heading, Table, Tr, Td, Th, Tbody, Thead, Spinner } from "@chakra-ui/react";
import { useEffect, useState } from "react";
import axiosInstance from "@/lib/axios";
import { render } from "react-dom";

//cakra ui untuk css
//formik untuk handle form
//yup untuk validate form input
//axios untuk API call
//react query untuk manage Api call


export default function Home() {

  const [products, setProducts] = useState([]); //menyimpan data dari function fetchProduct
  const [isLoading, setLoading] = useState(false); //menyimpan status loading


  const fetchProduct = async () => {    //function fetching data from API
    setLoading(true);
    setTimeout(async () => {
      try {
        const productResponse = await axiosInstance.get("/products");
        setProducts(productResponse.data);
        setLoading(false);

      } catch (error) {
        console.log(error.message);
      }
    }, 1500);
  }

  const renderProducts = () => {
    return products.map((value) => { //mapping adalah proses untuk mengambil data satu persatu dari sebuah array
      return (
        <Tr key={value.id}>
          <Td>{value.id}</Td>
          <Td>{value.name}</Td>
          <Td>{value.price}</Td>
          <Td>{value.description}</Td>
          <Td>{value.image}</Td>
        </Tr>
      );
    })
  };

  useEffect(() => {
    fetchProduct();
  }, []);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Container>
          <Heading>Hello World</Heading>
          <Table>
            <Thead>
              <Tr>
                <Th>ID</Th>
                <Th>Name</Th>
                <Th>Price</Th>
                <Th>Description</Th>
                <Th>Image</Th>
              </Tr>
            </Thead>
            <Tbody>
              {/* menggunakan ternary options */}
              {isLoading ? <Tr><Td><Spinner /></Td></Tr> : renderProducts()}

              {/* menggunakan short-circuit 
              Jika isLoading true maka execute setelah &&
              Short-Circuit masbrooo */}

              {/* {isLoading && <Tr><Td><Spinner /></Td></Tr>}
              {!isLoading && renderProducts()} */}
            </Tbody>
          </Table>
        </Container>
      </main>
    </>
  );
}
